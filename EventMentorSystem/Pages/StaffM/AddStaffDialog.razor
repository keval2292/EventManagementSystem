@using EMS.DB.Models
@using EMS.DB.Constant
@using EMS.DB.Repository.Interface
@inject IEventRepository _EventRepository;
@inject ISnackbar Snackbar;
@inject IUserRepository _UserRepository;
@inject IStaffRepository _StaffRepository;
@inject IEventCategoryRepository _EventCategoryRepository;
@inject INotificationMessagesRepository _NotificationMessagesRepository;
@inject ICategoryServiceRepository _CategoryServiceRepository;
@inject IDialogService DialogService;
@inject NavigationManager NavigationManager;
@*<h3>AddStaffDialog</h3>*@
<EditForm Model="@staffModel" OnValidSubmit="Save">
    <DataAnnotationsValidator />
    <MudDialog>
        <DialogContent>
            <MudGrid>
                <MudItem lg="4" md="4" xs="12">
                    <MudTextField @bind-Value="staffModel.User.UserName" For="@(() => staffModel.User.UserName)" Class="m-0" Label="Full Name" Variant="Variant.Outlined" Margin="Margin.Normal"></MudTextField>
                </MudItem>
                <MudItem lg="4" md="4" xs="12">
                    <MudTextField @bind-Value="staffModel.User.ContactNo" For="@(() => staffModel.User.ContactNo)" Class="m-0" Label="Mobile No" Variant="Variant.Outlined" Margin="Margin.Normal"></MudTextField>
                </MudItem>
                <MudItem lg="4" md="4" xs="12">
                    <MudTextField @bind-Value="staffModel.User.Email" For="@(() => staffModel.User.Email)" Class="m-0" Label="AltPhone No" Variant="Variant.Outlined" Margin="Margin.Normal"></MudTextField>
                </MudItem>
                <MudItem lg="12" md="12" xs="12">
                    <MudSelect @bind-Value="staffModel.StaffService" For="@(() => staffModel.StaffService)" Label="select Service" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" Required="true" RequiredError="Service is required.">
                        @foreach (var data in ServiceList)
                        {
                            <MudSelectItem Value="@data.Id">@data.ServiceName</MudSelectItem>

                        }
                    </MudSelect>
                </MudItem>
            </MudGrid>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="CancelForm" Variant="Variant.Filled" Color="Color.Error">Cancel</MudButton>
            <MudButton Color="Color.Primary" ButtonType="ButtonType.Submit" Variant="Variant.Filled">Edit</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public Staff StaffModel { get; set; } = new Staff();
    [Parameter] public GlobalParameter _parameters { get; set; }
    private CategoryService ServiceModel = new();
    private List<CategoryService> ServiceList = new();
    private string searchString = "";
    private HubConnection hubConnection;
    private MudTable<Staff> tableRef;

    protected override async Task OnInitializedAsync()
    {

        hubConnection = new HubConnectionBuilder()
        .WithUrl(NavigationManager.ToAbsoluteUri("/chathub"))
        .Build();
        hubConnection.On<Staff>("staffAddUpdate", (staffs) =>
        {
            InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();

    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            GetAll();
            StateHasChanged();
        }

        return base.OnAfterRenderAsync(firstRender);
    }

    private List<CategoryService> GetAll()
    {
        ServiceList = _CategoryServiceRepository.GetList();
        return ServiceList;
    }

    private bool isReadOnly = false;
    private Staff staffModel = new();
    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();

    protected override void OnInitialized()
    {
        if (StaffModel is not null && StaffModel.Id > 0)
        {
            isReadOnly = true;
        }
        staffModel = StaffModel;
        base.OnInitialized();
    }
    private async Task Save()
    {
        try
        {
            _StaffRepository.Update(staffModel);
            await hubConnection.SendAsync("staffAddUpdate", StaffModel);
            MudDialog.Close(DialogResult.Ok(true));
            staffModel = new Staff();
        }
        catch (Exception ex)
        {
            _parameters.ShowErrorMessages(ex);
        }
    }
    private void CancelForm()
    {
        MudDialog.Close(DialogResult.Ok(true));
        staffModel = new Staff();
    }
}

